<?php  

class Paises extends Process {

  public function __construct(){

      //limite per page
      $this->contentName= 'Pais';
      $this->contentNamePlural= 'Paises';
      $this->button_add =  TRUE;
      $this->button_add_text =  'Agregar '.$this->contentName;

      $this->parentID =1179;
      $this->type = 'category';
      $this->button_add_url =  '/engine/page/add/?parent_id='.$this->parentID;
      $this->perm_edit = 'admin-'.$this->type.'-edit';
      $this->perm_delete = 'admin-'.$this->type.'-delete';
      $this->perm_view = 'admin-'.$this->type.'-view';
      $this->contentType='pregunta';
      
      $this->modulePath = $this->config->paths->siteModules.'Wine';
    }

  public static function getModuleinfo() {

    return array(
            'title' => 'Paises',
            'summary' => 'Gestionar Paises',
            'version' => 100,
            'href' => '',
            'page'=>array('name'=>'paises','parent'=>'/engine/vinos/'),
            'permission' => 'admin-dashboard', /* permission required */
            'configurable'=>false,
            'requires' => array('WineDashboard'),
            'permissions' => array(     
                'admin-vino-view' => 'Ver Trivia',
                'admin-vino-edit' => 'Editar Trivia',
                'admin-vino-delete' => 'Eliminar Trivia'
                )  /* install new permission */
        );
  }

  

    public function ___execute() {
     
    
    $this->querySelector="template=category,parent=".$this->parentID.",include=hidden, limit=30";
    $table = $this->modules->get("MarkupAdminDataTable");
    $table->setEncodeEntities(false); 
    $table->setSortable(true);
    $table->setResizable(true);
    $table->setResponsive(true);

    $table->headerRow( ["Titulo",  "Creado","Acciones"] );

    $results =  $this->pages->find($this->querySelector);
    $pagination = $results->renderPager();
    foreach($results as $item){
     
       $data = array(
        // Values with a sting key are converter to a link: title => link
         $item->title => $this->config->urls->admin."page/edit/?id=".$item->id,
         date("F j, Y", $item->created),
          "editar"=>$this->config->urls->admin."page/edit/?id=".$item->id
      );
      $table->row($data);
    }


   // $table->footerRow( $someArray );
    //SET TEXT VARS 
    $pageTitle = $this->contentName;
    $description =  "Gestionar ".$this->post;
 
   //SET TEMPLATE
    $content = new TemplateFile(dirname(__FILE__).'/pages/admin-content.php');
     //set variables
    //$content->set('description',$description);
    $content->set('button_add',$this->button_add);
    if($this->button_add===TRUE){
        $content->set('button_add_text',$this->button_add_text);
        $content->set('button_add_url',$this->button_add_url);
    }
  
    $content->set('count_results',$results->getTotal());
    $content->set('no_results','No se han encontrado '.$this->contentNamePlural);
    $content->set('table',$table->render());
    $content->set('pagination',$pagination);


     //SET title
     $this->page->title='Paises';
     return $content->render();

      
    }
 

 

public function ___executeEdit(){
    if($this->user->hasPermission($this->perm_edit)) {
      return "Puedes editar los ".$this->contentNamePlural;
    
    }
}

public function ___executeDelete(){
    if($this->user->hasPermission($this->perm_delete)) {
      return "Puedes eliminar los ".$this->contentNamePlural;
    
    }
}
public function ___executeView(){
    if($this->user->hasPermission($this->perm_view)) {
      return "Puedes ver los ".$this->contentNamePlural;
    
    }
}

public function ___install() {
    parent::___install(); // always remember to call parent method
  }

  /**
   * Called only when your module is uninstalled
   *
   * This should return the site to the same state it was in before the module was installed. 
   *
   * If you don't need anything here, you can simply remove this method. 
   *
   */
  public function ___uninstall() {
    parent::___uninstall(); // always remember to call parent method
  }

    public function init() {
        // add hook to the page edit module and the method that creates the wanted fieldset
        $this->addHookAfter('ProcessPageEdit::buildFormSettings', $this, "removeSettings");
    }

  function removeSettings(HookEvent $event){
        // $event->return being the inputfield wrapper
        $wrapper = $event->return;
        // set the inputfield wrapper to hidden
        $wrapper->collapsed = Inputfield::collapsedHidden;
        // Get the active Object (ProcessPageEdit)
        $process = $event->object;
        // Remove the Settings tab with the ID
        $process->removeTab('ProcessPageEditSettings');
        // we're done
    }

}